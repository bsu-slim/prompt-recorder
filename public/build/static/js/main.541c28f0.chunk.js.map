{"version":3,"sources":["sockets/socket-conf.js","sockets/socket.js","sockets/read.js","components/Log.js","components/Stepper.js","components/Joiner.js","modules/AdminHome.js","components/Prompts.js","sockets/create.js","sockets/delete.js","audio/audio.js","components/Settings.js","sockets/update.js","components/Importer.js","components/Player.js","components/Recordings.js","components/Manager.js","components/DuplicateRoomModal.js","components/NewRoomModal.js","modules/AdminRoom.js","components/NewRecorderModal.js","components/Controls.js","components/Prompter.js","components/IDer.js","components/Recorder.js","modules/UserHome.js","components/Waiter.js","modules/UserRoom.js","serviceWorker.js","index.js"],"names":["module","exports","SampleRate","Channels","socketServer","config","require","socket","openSocket","onReconnect","cb","on","payload","cbDataRoom","cbNewRoom","getPromptList","emit","getRecordingList","Log","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onDisconnect","reason","message","concat","type","onNewMessage","attempt","onReconnectAttempt","messages","state","push","react_default","a","createElement","Header","as","color","key","length","className","time","_ismounted","setState","element","document","getElementById","scrollTop","scrollHeight","Card","id","fluid","Content","Icon","name","Description","React","Component","Stepper","onClick","e","target","props","history","value","steps","items","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","entries","Symbol","iterator","next","done","_ref3","_ref2","slicedToArray","index","Step","completed","description","title","href","active","disabled","err","return","Group","widths","size","ordered","withRouter","Joiner","onJoin","room","includes","match","path","join","window","location","pathname","admin","stepper","components_Stepper","Form","onSubmit","Field","width","Input","placeholder","action","labelPosition","icon","content","AdminHome","Grid","columns","padded","Column","components_Joiner","components_Log","Prompts","onPromptAdd","pid","promptID","roomID","settings","roomKey","sendSearch","onPromptRemove","search","_this2","prompts","onChange","onUpdateSearch","List","divided","verticalAlign","map","item","promptlistExistsForRoom","Item","floated","Button","bind","prompt","textAlign","circular","ctx","processor","input","globalStream","Settings","handleRoomActive","val","checked","updateRoomActive","handleRoomShuffle","shuffle","updateRoomShuffle","Checkbox","label","Importer","onLanguageChange","_ref","language","onFileSelect","files","myFile","file","reader","FileReader","addEventListener","result","split","i","readAsBinaryString","onCreate","forEach","createPrompt","add","languageID","handleAddToggle","languages","options","text","languageName","languageTag","Popup","trigger","flowing","hoverable","Message","Dropdown","selection","Player","getSec","ms","Math","floor","getMin","s","getExtraSec","togglePlay","playing","audio","current","pause","play","handleUpdate","currentTime","percent","duration","handlePause","handlePlay","handleReplay","ended","handleFwd","step","handleBack","handleEnded","handleVolumeChange","volume","handleVolumeUp","round","handleVolumeDown","handleLoad","handleDurationChange","getAudio","url","createRef","ref","src","needsReload","nextProps","load","minutes","seconds","curMinutes","curSeconds","Progress","download","Recordings","recordings","recs","filter","rec","r","components_Player","recordingID","filepath","recorderID","Manager","handleDataRoom","init","handleListPrompts","handleListRoomRecordings","handleReloadRecordings","loadRecordings","handleDataPrompt","loadPrompts","handleDataPromptList","promptlist","getRoomRecordingList","searchString","onQuit","created","cbListPrompts","cbDataPromptList","cbListRoomRecordings","cbReloadRoomRecording","panes","menuItem","render","Tab","Pane","attached","components_Settings","components_Prompts","components_Recordings","components_Importer","menu","borderless","pointing","DuplicateRoomModal","open","copy","onTrigger","onCancel","onRoomKeyChange","Modal","dimmer","Actions","NewRoomModal","components_DuplicateRoomModal","AdminRoom","handleNewRoom","isNew","handleListLanguages","params","components_NewRoomModal","components_Manager","newRecorderModal","updateNewRec","newRecorder","userID","SAMPLERATE","CHANNELS","BUFFERSIZE","constraints","video","MediaDevices","isHTTPs","protocol","canEnumerate","isMicrophoneAlreadyCaptured","isWebcamAlreadyCaptured","startRecording","checkDeviceSupport","hasMicrophone","AudioContext","createScriptProcessor","connect","destination","resume","navigator","mediaDevices","getUserMedia","then","stream","createMediaStreamSource","onaudioprocess","l","data","inputBuffer","getChannelData","lResample","downsampleBuffer","sampleRate","microphoneProcess","record","alert","enumerateDevices","callback","MediaStreamTrack","buffer","outSampleRate","Error","sampleRateRatio","newLength","Int16Array","offsetResult","offsetBuffer","nextOffsetBuffer","accum","count","min","getSources","devices","_device","skip","device","d","kind","deviceId","Controls","onNewRecording","listPayload","activeIndex","activeRecording","onListRecordings","onUpdateRecording","prev","channels","recording","stopRecording","tracks","getTracks","stop","disconnect","close","getNavButtons","basic","NewRecorderModal","getRecordButton","getBars","getLatestFile","latest","recPrompt","metrics","cbUpdateRecording","cbListRecordings","max","navButtons","recButton","bars","latestFile","Prompter","recorder","Loader","components_Controls","IDer","onIDChange","onAgeChange","recorderAge","onGenderChange","recorderGender","onCreateRecorder","createRecorder","_this$state","Divider","horizontal","Recorder","handleUpdateNewRec","components_Prompter","components_IDer","UserHome","components_Recorder","Waiter","inline","UserRoom","GetPrompts","handleListRoomPrompts","handleNoRecorder","handleNewRecorder","array","temporaryValue","randomIndex","currentIndex","random","cbNewRecorder","cbListRoomPrompts","components_Waiter","Boolean","hostname","ReactDOM","react_router_dom","react_router","exact","component","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.541c28f0.chunk.js","sourcesContent":["module.exports = {\r\n  SampleRate: 16000,\r\n  Channels: 1,\r\n  socketServer: 'http://localhost:8000'\r\n}","import openSocket from 'socket.io-client';\r\nconst config = require('./socket-conf');\r\nconst socket = openSocket(config.socketServer);\r\n\r\nexport function onDisconnect(cb) {\r\n  socket.on('disconnect', payload => cb(payload));\r\n}\r\n\r\nexport function onReconnect(cb) {\r\n  socket.on('reconnect', payload => cb(payload));\r\n}\r\n\r\nexport function onReconnectAttempt(cb) {\r\n  socket.on('reconnect_attempt', payload => cb(payload));\r\n}\r\n\r\nexport default socket;","import socket from './socket';\r\n\r\nexport function cbListRooms(cb) {\r\n  socket.on('listRooms', payload => cb(payload));\r\n}\r\n\r\nexport function cblistLanguages(cb) {\r\n  socket.on('listLanguages', payload => cb(payload));\r\n}\r\n\r\nexport function cbDataRoom(cb) {\r\n  socket.on('dataRoom', payload => cb(payload));\r\n}\r\n\r\nexport function cbDataPrompt(cb) {\r\n  socket.on('dataPrompt', payload => cb(payload));\r\n}\r\n\r\nexport function cbDataPromptList(cb) {\r\n  socket.on('dataPromptList', payload => cb(payload));\r\n}\r\n\r\nexport function cbNoRecorder(cb) {\r\n  socket.on('noRecorder', payload => cb(payload));\r\n}\r\n\r\nexport function cbNewRecorder(cb) {\r\n  socket.on('newRecorder', payload => cb(payload));\r\n}\r\n\r\nexport function cbMessage(cb) {\r\n  socket.on('m', payload => cb(payload));\r\n}\r\n\r\nexport function cbNewRoom(cb) {\r\n  socket.on('newRoom', payload => cb(payload));\r\n}\r\n\r\nexport function cbNewRecording(cb) {\r\n  socket.on('newRecording', payload => cb(payload));\r\n}\r\n\r\nexport function cbListLanguages(cb) {\r\n  socket.on('listLanguages', payload => cb(payload));\r\n}\r\n\r\nexport function cbListPrompts (cb) {\r\n  socket.on('listPrompts', payload => cb(payload));\r\n}\r\n\r\nexport function cbListRoomPrompts (cb) {\r\n  socket.on('listRoomPrompts', payload => cb(payload));\r\n}\r\n\r\nexport function cbListRecordings (cb) {\r\n  socket.on('listRecordings', payload => cb(payload));\r\n}\r\n\r\nexport function cbListRoomRecordings (cb) {\r\n  socket.on('listRoomRecordings', payload => cb(payload));\r\n}\r\n\r\nexport function joinAdmin(payload) {\r\n  socket.emit('joinAdmin', payload);\r\n}\r\n\r\nexport function getPromptList(payload) {\r\n  socket.emit('getPromptList', payload);\r\n}\r\n\r\nexport function getRecordingList(payload) {\r\n  socket.emit('getRecordingList', payload);\r\n}\r\n\r\nexport function getRoomRecordingList(payload) {\r\n  socket.emit('getRoomRecordingList', payload)\r\n}\r\n\r\nexport function getRoomPrompts(payload) {\r\n  socket.emit('getRoomPrompts', payload);\r\n}","import React from 'react';\r\nimport { Card, Header, Icon } from 'semantic-ui-react';\r\nimport { cbMessage } from '../sockets/read';\r\n\r\nimport { onDisconnect, onReconnect, onReconnectAttempt } from '../sockets/socket';\r\n\r\n\r\nclass Log extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = { messages: [] };\r\n    cbMessage(this.onNewMessage);\r\n    onDisconnect(this.onDisconnect);\r\n    onReconnect(this.onReconnect);\r\n    onReconnectAttempt(this.onReconnectAttempt);\r\n  }\r\n\r\n  componentDidMount() { \r\n    this._ismounted = true;\r\n  }\r\n  \r\n  componentWillUnmount() {\r\n     this._ismounted = false;\r\n  }\r\n\r\n  onDisconnect = (reason) => {\r\n    let payload = {\r\n      message: `Client disconnected from server: ${reason}.`, \r\n      type:'error'\r\n    }\r\n    this.onNewMessage(payload);\r\n  }\r\n  onReconnect = (attempt) => {\r\n    let payload = {\r\n      message: `Client reconnected to server on attempt ${attempt}.`, \r\n      type:'success'\r\n    }\r\n    this.onNewMessage(payload);\r\n  }\r\n  onReconnectAttempt = (attempt) => {\r\n    let payload = {\r\n      message: `Client is attempting to reconnect to the server. Attempt: ${attempt}.`, \r\n      type:'warning'\r\n    }\r\n    this.onNewMessage(payload);\r\n  }\r\n  \r\n  render() {\r\n    const { messages } = this.state;\r\n    return (\r\n      <Card id='log' fluid color='green'>\r\n        <Card.Content>\r\n          <Card.Header>\r\n          <Icon name='file alternate' />\r\n            Application Log\r\n          </Card.Header>\r\n          <Card.Description id=\"log-scroll\">\r\n            { messages }\r\n          </Card.Description>\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  onNewMessage = (payload) => {\r\n    let messages = this.state.messages;\r\n    switch(payload.type) {\r\n      case 'success':\r\n        messages.push(<Header as='h5' color='green' key={messages.length+1}><Header as='span' className='msg-time' color='violet'>{payload.time} </Header>{payload.message}</Header>);\r\n        break;\r\n      case 'error':\r\n        messages.push(<Header as='h5' color='red' key={messages.length+1}><Header as='span'  className='msg-time' color='violet'>{payload.time} </Header>{payload.message}</Header>);\r\n        break;\r\n      case 'warning':\r\n        messages.push(<Header as='h5' color='yellow' key={messages.length+1}><Header as='span' className='msg-time' color='violet'>{payload.time} </Header>{payload.message}</Header>);\r\n        break;\r\n      default:\r\n        messages.push(<Header as='h5' color='violet' key={messages.length+1}><Header as='span' className='msg-time' color='violet'>{payload.time} </Header>{payload.message}</Header>);\r\n        break;\r\n    }\r\n    if(this._ismounted) {\r\n      this.setState({messages: messages}, () => {\r\n        let element = document.getElementById('log-scroll');\r\n        element.scrollTop = element.scrollHeight;\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default Log;\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Step } from 'semantic-ui-react';\r\n\r\nclass Stepper extends React.Component {\r\n  onClick = (e, target) => {\r\n    this.props.history.push(target.value);\r\n  }\r\n\r\n  render() {\r\n    let steps = this.props.steps;\r\n    let items = [];\r\n    for(const [index, value] of steps.entries()) {\r\n      switch(value.state) {\r\n        case \"completed\":\r\n          items.push(<Step completed key={index} description={value.description} title={value.title} onClick={this.onClick} value={value.href} />);\r\n          break;\r\n        case \"active\":\r\n          items.push(<Step active key={index} description={value.description} title={value.title} onClick={this.onClick} value={value.href}/>);\r\n          break;\r\n        default:\r\n          items.push(<Step disabled key={index} description={value.description} title={value.title} onClick={this.onClick} value={value.href} />);\r\n          break;\r\n      }\r\n    }\r\n    return (\r\n      <Step.Group widths={steps.length} size='mini' ordered>\r\n        {items}\r\n      </Step.Group>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Stepper);","import React from 'react';\r\nimport path from 'path';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Card, Form, Input, Header } from 'semantic-ui-react';\r\nimport Stepper from './Stepper';\r\n\r\n\r\n\r\n\r\nclass Joiner extends React.Component {\r\n\r\n  onJoin = (e) => {\r\n    let room = e.target[0].value;\r\n    if(room && room !== '' && !room.includes('admin') && !room.includes('Admin') && room.match(/^[-_.\\w\\s]*$/)) {\r\n      this.props.history.push(path.join(window.location.pathname, room));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let admin = this.props.admin;\r\n    let stepper = (<Stepper steps={[\r\n      {state: 'active', title: 'Join a Room', description: 'Enter a room to join', href: '/'},\r\n      {state: 'disabled', title: 'Provide an ID', description: 'Identify the recorder', href: '#' },\r\n      {state: 'disabled', title: 'Record', description: 'Record prompt readings', href: '#'}\r\n    ]} />);\r\n\r\n    return (\r\n      <Card fluid color='violet'>\r\n        <Card.Content>\r\n          {admin ? '':stepper}\r\n          <Card.Description>\r\n          <Header as='h3' color='violet'>Join A Room:</Header>\r\n            <Form onSubmit={this.onJoin}>\r\n              <Form.Group>\r\n                <Form.Field width={16}>\r\n                  <label>Room Name:</label>\r\n                  <Input \r\n                    placeholder='myRoom1234'\r\n                    name='room'\r\n                    id='room'\r\n                    action={{ \r\n                      color: 'violet',\r\n                      labelPosition: 'right', \r\n                      icon: 'arrow circle right', \r\n                      content: 'Join Room',\r\n                      type: 'sumbit'\r\n                    }}\r\n                  />\r\n                </Form.Field>\r\n              </Form.Group>\r\n            </Form>\r\n          </Card.Description>\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default withRouter(Joiner);\r\n","import React from 'react';\r\nimport { Grid, Header } from 'semantic-ui-react';\r\nimport Log from '../components/Log';\r\nimport Joiner from '../components/Joiner';\r\nimport './Modules.css';\r\n\r\nfunction AdminHome() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header as='h1' color='violet'>Prompt Recorder V2.0 Admin Panel</Header>\r\n      <Grid columns='equal' padded>\r\n        <Grid.Column>\r\n          <Joiner admin='admin' />\r\n        </Grid.Column>\r\n        <Grid.Column>\r\n          <Log />\r\n        </Grid.Column>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminHome;\r\n","import React from 'react';\r\nimport { \r\n  Form,\r\n  Input,\r\n  Button,\r\n  Header,\r\n  List,\r\n  Icon\r\n} from 'semantic-ui-react';\r\nimport { createPromptList } from '../sockets/create';\r\nimport { deletePromptList } from '../sockets/delete';\r\n\r\nclass Prompts extends React.Component {\r\n  \r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      search: ''\r\n    }\r\n  }\r\n\r\n  onPromptAdd = (pid, e) => {\r\n    createPromptList({promptID: pid, roomID: this.props.settings.roomID, roomKey: this.props.settings.roomKey});\r\n    this.props.sendSearch();\r\n  }\r\n\r\n  onPromptRemove = (pid, e) => {\r\n    deletePromptList({promptID: pid, roomID: this.props.settings.roomID, roomKey: this.props.settings.roomKey});\r\n    this.props.sendSearch();\r\n  }\r\n\r\n  render() {\r\n    let prompts = this.props.prompts;\r\n    let search = this.props.search;\r\n    \r\n    return (\r\n      <div id='prompts'>\r\n        <Header color='violet' as='h4'>Prompt Manager:</Header>\r\n        \r\n        <Form>\r\n          <Form.Group widths={16}>\r\n            <Form.Field width={16}>\r\n              <label>Search Prompts:</label>\r\n              <Input\r\n                fluid\r\n                placeholder='Search...'\r\n                name='search'\r\n                action={{ color: 'violet', labelPosition: 'right', icon: 'search', content: 'Search', onClick: this.props.sendSearch }}\r\n                onChange={this.props.onUpdateSearch}\r\n                value={search}\r\n              />\r\n            </Form.Field>\r\n          </Form.Group>\r\n        </Form>\r\n        <Header as='h5'>\r\n          Prompts Available:\r\n        </Header>\r\n        <List className='prompt-list-manager' divided verticalAlign='middle'>\r\n          { prompts.length > 0 ?\r\n            prompts.map( (item, index) => {\r\n              return !item.promptlistExistsForRoom ?\r\n              (\r\n                <List.Item key={index}>\r\n                  <List.Content floated='right'>\r\n                    <Button \r\n                      color='green'\r\n                      content='Add'\r\n                      icon='plus circle'\r\n                      size='mini'\r\n                      labelPosition='right'\r\n                      onClick={this.onPromptAdd.bind(null, item.promptID)}\r\n                    />\r\n                  </List.Content>\r\n                  <Icon name='chat' />\r\n                  <List.Content>\r\n                    {item.prompt}\r\n                  </List.Content>\r\n                </List.Item>\r\n              ) : ''\r\n            })\r\n            :\r\n            <Header \r\n              as='h2'\r\n              textAlign='center'\r\n              icon\r\n              disabled\r\n            >\r\n              <Icon name=\"list alternate\" circular />\r\n              <Header.Content>No existing prompts...</Header.Content>\r\n            </Header>\r\n          }\r\n        </List>\r\n        <Header as='h5'>\r\n          Prompts In Session:\r\n        </Header>\r\n        <List className='prompt-list-manager' divided verticalAlign='middle'>\r\n          { prompts.length > 0 ?\r\n            prompts.map( (item, index) => {\r\n              return item.promptlistExistsForRoom ?\r\n              (\r\n                <List.Item key={index}>\r\n                  <List.Content floated='right'>\r\n                    <Button\r\n                      color='red'\r\n                      content='Remove'\r\n                      icon='times circle'\r\n                      size='mini'\r\n                      labelPosition='right'\r\n                      onClick={this.onPromptRemove.bind(null, item.promptID)}\r\n                    />\r\n                  </List.Content>\r\n                  <Icon name='chat' />\r\n                  <List.Content>\r\n                    {item.prompt} \r\n                  </List.Content>\r\n                </List.Item>\r\n              ) : ''\r\n            })\r\n            :\r\n            <Header \r\n              as='h2'\r\n              textAlign='center'\r\n              icon\r\n              disabled\r\n            >\r\n              <Icon name=\"list alternate\" circular />\r\n              <Header.Content>No existing prompts...</Header.Content>\r\n            </Header>\r\n          }\r\n        </List>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default Prompts;\r\n","import socket from './socket';\r\n\r\nexport function createRecorder(payload) {\r\n  socket.emit('newRecorder', payload);\r\n}\r\n\r\nexport function createRoom(payload) {\r\n  socket.emit('newRoom', payload);\r\n}\r\n\r\nexport function duplicateRoom(payload) {\r\n  socket.emit('duplicateRoom', payload);\r\n}\r\n\r\nexport function createPrompt(payload) {\r\n  socket.emit('newPrompt', payload);\r\n}\r\n\r\nexport function createPromptList(payload) {\r\n  socket.emit('newPromptList', payload);\r\n}","import socket from './socket';\r\n\r\nexport function deletePromptList(payload) {\r\n  socket.emit('deletePromptList', payload);\r\n}","import socket from '../sockets/socket';\r\n\r\nexport const SAMPLERATE = 16000;\r\nexport const CHANNELS = 1;\r\nexport const BUFFERSIZE = 2048;\r\n\r\nlet constraints = { audio: true, video: false };\r\n\r\nlet ctx, processor, input, globalStream;\r\nlet MediaDevices = [];\r\nlet isHTTPs = window.location.protocol === 'https:';\r\nlet canEnumerate = false;\r\n\r\nexport let hasMicrophone = false;\r\nexport let hasSpeakers = false;\r\nexport let hasWebcam = false;\r\n\r\nexport let isMicrophoneAlreadyCaptured = false;\r\nexport let isWebcamAlreadyCaptured = false;\r\n\r\nif (navigator.mediaDevices && navigator.mediaDevices.enumerateDevices) {\r\n  // Firefox 38+ seems having support of enumerateDevicesx\r\n  navigator.enumerateDevices = function(callback) {\r\n      navigator.mediaDevices.enumerateDevices().then(callback);\r\n  };\r\n}\r\n\r\nif (typeof MediaStreamTrack !== 'undefined' && 'getSources' in MediaStreamTrack) {\r\n  canEnumerate = true;\r\n} else if (navigator.mediaDevices && !!navigator.mediaDevices.enumerateDevices) {\r\n  canEnumerate = true;\r\n}\r\n\r\ncheckDeviceSupport();\r\n\r\nexport function startRecording(payload) {\r\n  checkDeviceSupport(() => {\r\n    if(window.hasMicrophone) {\r\n      record(payload);\r\n    } else {\r\n      alert('NO MICROPHONE ATTACHED. Please connect a microphone device to record with.');\r\n    }\r\n  })\r\n}\r\n\r\nexport function stopRecording(payload) {\r\n  if(globalStream) {\r\n    let tracks = globalStream.getTracks();\r\n    if(tracks.length > 0) {\r\n      tracks[0].stop();\r\n    }\r\n    input.disconnect(processor);\r\n    processor.disconnect(ctx.destination);\r\n    ctx.close().then(() => {\r\n      input = null;\r\n      processor = null;\r\n      ctx = new AudioContext();\r\n    });\r\n  } else {\r\n    window.hasMicrophone = false;\r\n    alert(\"NO MICROPHONE ATTACHED. Please connect a microphone device to record with.\")\r\n  }\r\n  socket.emit('stopRecording', payload);\r\n}\r\n\r\nfunction record(payload) {\r\n  socket.emit('startRecording', payload);\r\n  ctx = new AudioContext();\r\n  processor = ctx.createScriptProcessor(BUFFERSIZE, CHANNELS, CHANNELS);\r\n  processor.connect(ctx.destination);\r\n  ctx.resume();\r\n\r\n  let handleSuccess = (stream) => {\r\n    globalStream = stream;\r\n    input = ctx.createMediaStreamSource(stream);\r\n    input.connect(processor);\r\n    processor.onaudioprocess = (e) => {\r\n      payload['data'] = e;\r\n      microphoneProcess(payload);\r\n    }\r\n  }\r\n\r\n  navigator.mediaDevices.getUserMedia(constraints).then(handleSuccess);\r\n}\r\n\r\nfunction microphoneProcess(payload) {\r\n  let chunk = payload.data;\r\n  let l = chunk.inputBuffer.getChannelData(0);\r\n  let lResample = downsampleBuffer(l, ctx.sampleRate, SAMPLERATE);\r\n  payload.data = lResample;\r\n  socket.emit('binaryData', payload);\r\n}\r\n\r\nlet downsampleBuffer = (buffer, sampleRate, outSampleRate) => {\r\n  if (outSampleRate === sampleRate) {\r\n      return buffer;\r\n  }\r\n  if (outSampleRate > sampleRate) {\r\n      throw new Error(\"downsampling rate show be smaller than original sample rate\");\r\n  }\r\n  var sampleRateRatio = sampleRate / outSampleRate;\r\n  var newLength = Math.round(buffer.length / sampleRateRatio);\r\n  var result = new Int16Array(newLength);\r\n  var offsetResult = 0;\r\n  var offsetBuffer = 0;\r\n  while (offsetResult < result.length) {\r\n      var nextOffsetBuffer = Math.round((offsetResult + 1) * sampleRateRatio);\r\n      var accum = 0, count = 0;\r\n      for (var i = offsetBuffer; i < nextOffsetBuffer && i < buffer.length; i++) {\r\n          accum += buffer[i];\r\n          count++;\r\n      }\r\n\r\n      result[offsetResult] = Math.min(1, accum / count)*0x7FFF;\r\n      offsetResult++;\r\n      offsetBuffer = nextOffsetBuffer;\r\n  }\r\n  return result.buffer;\r\n}\r\n\r\nfunction checkDeviceSupport(callback) {\r\n  if (!canEnumerate) {\r\n    return;\r\n}\r\n\r\nif (!navigator.enumerateDevices && window.MediaStreamTrack && window.MediaStreamTrack.getSources) {\r\n    navigator.enumerateDevices = window.MediaStreamTrack.getSources.bind(window.MediaStreamTrack);\r\n}\r\n\r\nif (!navigator.enumerateDevices && navigator.enumerateDevices) {\r\n    navigator.enumerateDevices = navigator.enumerateDevices.bind(navigator);\r\n}\r\n\r\nif (!navigator.enumerateDevices) {\r\n    if (callback) {\r\n        callback();\r\n    }\r\n    return;\r\n}\r\n\r\nMediaDevices = [];\r\n  navigator.enumerateDevices(function(devices) {\r\n    devices.forEach(function(_device) {\r\n        var device = {};\r\n        for (var d in _device) {\r\n            device[d] = _device[d];\r\n        }\r\n\r\n        if (device.kind === 'audio') {\r\n            device.kind = 'audioinput';\r\n        }\r\n\r\n        if (device.kind === 'video') {\r\n            device.kind = 'videoinput';\r\n        }\r\n\r\n        var skip;\r\n        MediaDevices.forEach(function(d) {\r\n            if (d.id === device.id && d.kind === device.kind) {\r\n                skip = true;\r\n            }\r\n        });\r\n\r\n        if (skip) {\r\n            return;\r\n        }\r\n\r\n        if (!device.deviceId) {\r\n            device.deviceId = device.id;\r\n        }\r\n\r\n        if (!device.id) {\r\n            device.id = device.deviceId;\r\n        }\r\n\r\n        if (!device.label) {\r\n            device.label = 'Please invoke getUserMedia once.';\r\n            if (!isHTTPs) {\r\n                device.label = 'HTTPs is required to get label of this ' + device.kind + ' device.';\r\n            }\r\n        } else {\r\n            if (device.kind === 'videoinput' && !isWebcamAlreadyCaptured) {\r\n                isWebcamAlreadyCaptured = true;\r\n            }\r\n\r\n            if (device.kind === 'audioinput' && !isMicrophoneAlreadyCaptured) {\r\n                isMicrophoneAlreadyCaptured = true;\r\n            }\r\n        }\r\n\r\n        if (device.kind === 'audioinput') {\r\n            hasMicrophone = true;\r\n            window.hasMicrophone = true;\r\n        }\r\n\r\n        if (device.kind === 'audiooutput') {\r\n            hasSpeakers = true;\r\n        }\r\n\r\n        if (device.kind === 'videoinput') {\r\n            hasWebcam = true;\r\n        }\r\n\r\n        // there is no 'videoouput' in the spec.\r\n\r\n        MediaDevices.push(device);\r\n    });\r\n\r\n    if (callback) {\r\n        callback();\r\n    }\r\n});\r\n}","import React from 'react';\r\nimport { Form, Checkbox, Header } from 'semantic-ui-react';\r\nimport { updateRoomActive, updateRoomShuffle } from '../sockets/update';\r\n\r\n\r\nclass Settings extends React.Component {\r\n\r\n  handleRoomActive = (e, val) => {\r\n    let payload = this.props.settings;\r\n    payload.active = val.checked === true ? 1 : 0;\r\n    updateRoomActive(payload);\r\n  }\r\n  \r\n  handleRoomShuffle = (e, val) => {\r\n    let payload = this.props.settings;\r\n    payload.shuffle = val.checked === true ? 1 : 0;\r\n    updateRoomShuffle(payload);\r\n  }\r\n\r\n  render() {\r\n    let settings = this.props.settings;\r\n    return (\r\n      <div id='prompts'>\r\n        <Header color='violet' as='h4'>Settings Manager:</Header>\r\n        <Form>\r\n          <Form.Group>\r\n            <Form.Field>\r\n              <Checkbox\r\n                color='violet'\r\n                name='active'\r\n                label={<label>Allow Users To Record? (Activate Session)</label>}\r\n                checked={settings.active === 0 ? false : true}\r\n                onChange={this.handleRoomActive}\r\n              />\r\n            </Form.Field>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Field>\r\n              <Checkbox\r\n                color='violet'\r\n                name='shuffle'\r\n                label={<label>Randomize Prompt Order? (Knuth Shuffle)</label>}\r\n                checked={settings.shuffle === 0 ? false : true}\r\n                onChange={this.handleRoomShuffle}\r\n                disabled={settings.active ? true:false}\r\n              />\r\n            </Form.Field>\r\n          </Form.Group>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default Settings;\r\n","import socket from './socket';\r\n\r\nexport function updateRoomActive(payload) {\r\n  socket.emit('updateRoomActive', payload);\r\n}\r\n\r\nexport function updateRoomShuffle(payload) {\r\n  socket.emit('updateRoomShuffle', payload);\r\n}\r\n\r\nexport function cbUpdateRecording(cb) {\r\n  socket.on('updateRecording', payload => cb(payload));\r\n}\r\n\r\nexport function cbReloadRoomRecording(cb) {\r\n  socket.on('reloadRecList', payload => cb(payload));\r\n}","import React from 'react';\r\nimport { \r\n  Form,\r\n  Button,\r\n  Header,\r\n  Message,\r\n  List,\r\n  Icon,\r\n  Dropdown,\r\n  Popup,\r\n  Checkbox\r\n} from 'semantic-ui-react';\r\n\r\nimport { createPrompt } from '../sockets/create';\r\n\r\n\r\nclass Importer extends React.Component {\r\n\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      prompts: [],\r\n      language: 1,\r\n      add: false,\r\n      file: ''\r\n    }\r\n  }\r\n\r\n  onLanguageChange = (e, { value }) => this.setState({language: value});\r\n\r\n  onFileSelect = (e) => {\r\n    let text = '';\r\n    if (e.target.files && e.target.files[0]) {\r\n      var myFile = e.target.files[0];\r\n      this.setState({file: myFile});\r\n      var reader = new FileReader();\r\n      \r\n      reader.addEventListener('load', (e) => {\r\n        text = e.target.result;\r\n        let prompts = text.split('\\n');\r\n        for(let i = 0; i < prompts.length; i++) {\r\n          prompts[i] = {prompt: prompts[i]};\r\n        }\r\n        this.setState({prompts: prompts});\r\n      });\r\n      \r\n      reader.readAsBinaryString(myFile);\r\n    }   \r\n  }\r\n\r\n  onCreate = (e) => {\r\n    let prompts = this.state.prompts;\r\n    prompts.forEach((item) => {\r\n      let payload = {\r\n        prompt: item.prompt,\r\n        add: this.state.add,\r\n        roomID: this.props.room.roomID,\r\n        roomKey: this.props.room.roomKey,\r\n        languageID: 1\r\n      };\r\n      createPrompt(payload);\r\n    });\r\n    this.setState({prompts: []})\r\n    document.getElementById('prompt-file').value = '';\r\n  }\r\n\r\n  handleAddToggle = () => {\r\n    this.setState({add: !this.state.add});\r\n  }\r\n\r\n  render() {\r\n    let languages = this.props.languages;\r\n    let language = this.state.language;\r\n    let add = this.state.add;\r\n    let options = [];\r\n    languages.forEach((item) => {\r\n      options.push({\r\n        key: item.languageID+'-lang',\r\n        text: `${item.languageName} (${item.languageTag})`,\r\n        value: item.languageID\r\n      });\r\n    });\r\n    return (\r\n      <div id='prompts'>\r\n        <Header color='violet' as='h4'>Import Prompts From File:</Header>\r\n        <Form id=\"prompt-file-create\" className=\"prompt-file-form\">\r\n          <Form.Field>\r\n            <Checkbox\r\n              color='violet'\r\n              name='add'\r\n              label={<label>Auto Add To Current Room? </label>}\r\n              checked={add}\r\n              onChange={this.handleAddToggle}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n          <label>Prompt File&nbsp;\r\n            <Popup trigger={<Icon name=\"help circle\" />} flowing hoverable>\r\n              <div className='file-format'>\r\n                <h4>Prompt File Format:</h4>\r\n                <p>A list of prompts in a text file, new-line ('\\n') delimited like the following:</p>\r\n                <Message>\r\n                    <p>\r\n                        This is prompt 1. <br />\r\n                        This is prompt 2. <br />\r\n                        This is prompt 3. <br />\r\n                    </p>\r\n                </Message>\r\n              </div>\r\n            </Popup>:\r\n          </label>\r\n          <input type=\"file\" id=\"prompt-file\" onChange={this.onFileSelect} />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Prompt Language:</label>\r\n            <Dropdown\r\n              fluid\r\n              selection\r\n              onChange={this.onLanguageChange}\r\n              options={options}\r\n              value={language}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field id='prompts-in-file'>\r\n            <label>Prompts Recognized In Selected File:</label>\r\n            <List className='prompt-list' divided verticalAlign='middle'>\r\n              { this.state.prompts.length > 0 ?\r\n                this.state.prompts.map( (item, index) => {\r\n                  return (\r\n                    <List.Item key={index}>\r\n                      <List.Content>\r\n                        {item.prompt}\r\n                      </List.Content>\r\n                    </List.Item>\r\n                  )\r\n                })\r\n                :\r\n                <Header \r\n                    as='h2'\r\n                    textAlign='center'\r\n                    icon\r\n                    disabled\r\n                >\r\n                    <Icon name=\"list alternate\" circular />\r\n                    <Header.Content>No existing prompts...</Header.Content>\r\n                </Header>\r\n              }\r\n            </List>\r\n            <Button.Group floated='right'>\r\n              <Button \r\n                  type='button'\r\n                  color=\"green\"\r\n                  onClick={this.onCreate}\r\n                  icon='plus circle'\r\n                  content='Create Prompt(s)'\r\n                  labelPosition='right'\r\n              />\r\n            </Button.Group>\r\n          </Form.Field>\r\n          \r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Importer;\r\n","import React from 'react';\r\nimport { Button, Progress, Header } from 'semantic-ui-react';\r\n\r\nclass Player extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      duration: 0,\r\n      location: 0,\r\n      volume: .5,\r\n      playing: false,\r\n      percent: 0,\r\n      ended: false,\r\n      needsReload: false\r\n    }\r\n    this.audio = React.createRef();\r\n  }\r\n\r\n  getSec = (ms) => Math.floor(ms/1000);\r\n  getMin = (s) => Math.floor(s/60);\r\n  getExtraSec = (s) => s%60;\r\n\r\n  togglePlay = () => {\r\n    this.state.playing ? this.audio.current.pause() : this.audio.current.play();\r\n  };\r\n\r\n  handleUpdate = (e) => {\r\n    let audio = e.target;\r\n    if(audio) {\r\n      this.setState({\r\n        location: Math.floor(audio.currentTime*1000),\r\n        percent: Math.floor(audio.currentTime*1000)/this.state.duration*100\r\n      }); \r\n    }\r\n  }\r\n\r\n  handlePause = (e) => {\r\n    this.handleUpdate(e);\r\n    this.setState({playing: false});\r\n  }\r\n\r\n  handlePlay = (e) => {\r\n    this.handleUpdate(e);\r\n    this.setState({playing: true});\r\n  }\r\n\r\n  handleReplay = (e) => {\r\n    let audio = this.audio.current;\r\n    audio.currentTime = 0;\r\n    this.setState({\r\n      playing: true, \r\n      ended: false,\r\n      percent: 0\r\n    }, () => (audio.play()));\r\n    \r\n  }\r\n\r\n  handleFwd = () => {\r\n    let audio = this.audio.current;\r\n    let current = audio.currentTime*1000;\r\n    let duration = this.state.duration;\r\n    let step = duration/10;\r\n    if(current + step < duration) {\r\n      this.audio.current.currentTime = (current+step)/1000;\r\n    } else {\r\n      this.audio.current.currentTime = duration;\r\n      this.setState({ended: true});\r\n    }\r\n\r\n    \r\n  }\r\n\r\n  handleBack = () => {\r\n    let audio = this.audio.current;\r\n    let current = audio.currentTime*1000;\r\n    let duration = this.state.duration;\r\n    let step = duration/10;\r\n    if(current - step > 0) {\r\n      this.audio.current.currentTime = (current-step)/1000;\r\n    } else {\r\n      this.audio.current.currentTime = 0;\r\n    }\r\n    this.setState({ended: false});\r\n  }\r\n\r\n  handleEnded = (e) => {\r\n    this.setState({playing: false, ended: true});\r\n  }\r\n\r\n  handleVolumeChange = (e) => {\r\n    this.setState({volume: e.target.volume});\r\n  }\r\n\r\n  handleVolumeUp = () => {\r\n    let audio = this.audio.current;\r\n    let volume = audio.volume;\r\n    if((volume + 0.1) <= 1) {\r\n      this.audio.current.volume = Math.round(10*volume + 1)/10;\r\n    }\r\n  }\r\n\r\n  handleVolumeDown = () => {\r\n    let audio = this.audio.current;\r\n    let volume = audio.volume;\r\n    if((volume - 0.1) >= 0) {\r\n      this.audio.current.volume = Math.round(10*volume - 1)/10;\r\n    }\r\n  }\r\n\r\n  handleLoad = () => {\r\n    let audio = this.audio.current;\r\n    if(audio) {\r\n      this.setState({\r\n        duration: Math.floor(audio.duration*1000),\r\n        volume: audio.volume\r\n      });\r\n    }\r\n  }\r\n\r\n  handleDurationChange = () => {\r\n    let audio = this.audio.current;\r\n    if(audio) {\r\n      this.setState({\r\n        duration: Math.floor(audio.duration*1000),\r\n        volume: audio.volume\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    let audio = this.audio.current;\r\n    audio.addEventListener('loadeddata', this.handleLoad);\r\n    audio.addEventListener('timeupdate', this.handleUpdate);\r\n    audio.addEventListener('play', this.handlePlay);\r\n    audio.addEventListener('pause', this.handlePause);\r\n    audio.addEventListener('ended', this.handleEnded);\r\n    audio.addEventListener('volumechange', this.handleVolumeChange)\r\n    audio.addEventListener('durationchange', this.handleDurationChange);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if(nextProps.url !== this.props.url) {\r\n      this.setState({needsReload: true, ended: false});\r\n    }\r\n    if(nextProps.disabled) {\r\n      this.setState({\r\n        duration: 0,\r\n        location: 0,\r\n        volume: .5,\r\n        playing: false,\r\n        percent: 0,\r\n        ended: false,\r\n        needsReload: false\r\n      })\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if(this.state.needsReload) {\r\n      this.setState({needsReload: false}, this.audio.current.load());\r\n    }\r\n  }\r\n\r\n  getAudio = (url) => {\r\n    this.audio = React.createRef();\r\n    return (\r\n      <audio ref={this.audio} id='player-current' src={url} />\r\n    )\r\n  }\r\n\r\n  render() {\r\n    let color = this.props.color;\r\n    let url = this.props.url;\r\n    let disabled = this.props.disabled;\r\n    let title = this.props.title;\r\n    let playing = this.state.playing;\r\n    let ended = this.state.ended;\r\n    let volume = this.state.volume;\r\n    //console.log(url);\r\n\r\n    let duration = this.state.duration;\r\n    let minutes = this.getMin(this.getSec(duration));\r\n    let seconds = this.getExtraSec(this.getSec(duration));\r\n    \r\n    let location = this.state.location;\r\n    let curMinutes = this.getMin(this.getSec(location));\r\n    let curSeconds = this.getExtraSec(this.getSec(location));\r\n\r\n    let percent = this.state.percent;\r\n\r\n    let togglePlay = this.togglePlay;\r\n    let handleReplay = this.handleReplay;\r\n    let handleVolumeUp = this.handleVolumeUp;\r\n    let handleVolumeDown = this.handleVolumeDown;\r\n    let handleBack = this.handleBack;\r\n    let handleFwd = this.handleFwd;\r\n\r\n    let audio = this.getAudio(url);\r\n    \r\n\r\n    if(!disabled) {\r\n      return (\r\n        <div className='player-controls'>\r\n          {audio}\r\n          {title ? <Header as='h5' color='grey' className='player-title'>Recorded By: {title}</Header>:''}\r\n          <Button.Group>\r\n            {!ended ? \r\n              !playing ? \r\n                (<Button\r\n                  color={color}\r\n                  icon='play'\r\n                  className='player-play'\r\n                  disabled={duration > 0 ? false : true}\r\n                  onClick={togglePlay}\r\n                />)\r\n                :(<Button\r\n                  color={color}\r\n                  icon='pause'\r\n                  className='player-pause'\r\n                  disabled={duration > 0 ? false : true}\r\n                  onClick={togglePlay}\r\n                />)\r\n              : (<Button\r\n                  color={color}\r\n                  icon='redo'\r\n                  className='player-replay'\r\n                  disabled={duration > 0 ? false : true}\r\n                  onClick={handleReplay}\r\n                />)\r\n            }\r\n            <Button\r\n              color={color}\r\n              icon='backward'\r\n              className='player-backward'\r\n              disabled={duration > 0 ? false : true}\r\n              onClick={handleBack}\r\n            />\r\n            <Button\r\n              color={color}\r\n              icon='forward'\r\n              className='player-forward'\r\n              disabled={duration > 0 ? false : true}\r\n              onClick={handleFwd}\r\n            />\r\n          </Button.Group>\r\n            <Progress \r\n              color={color}\r\n              className='player-progress'\r\n              percent={percent}\r\n              label={`${curMinutes}:${curSeconds < 10 ? 0:''}${curSeconds} / ${minutes}:${seconds < 10 ? 0:''}${seconds}`} \r\n            />\r\n          <Button.Group>\r\n            <Button\r\n              color={color}\r\n              as='a'\r\n              href={url}\r\n              icon='download'\r\n              className='player-download'\r\n              disabled={duration > 0 ? false : true}\r\n              download\r\n            />\r\n            <Button\r\n              color={color}\r\n              icon='volume down'\r\n              className='player-down'\r\n              onClick={handleVolumeDown}\r\n            />\r\n            <Button\r\n              color={color}\r\n              icon='volume up'\r\n              className='player-up'\r\n              onClick={handleVolumeUp}\r\n            />\r\n          </Button.Group>\r\n          <div className='volume-indicator'>Volume: {volume*10}/10</div>\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div className='player-controls'>\r\n          {audio}\r\n          <Button.Group>\r\n            <Button\r\n              color={color}\r\n              icon='play'\r\n              className='player-play'\r\n              disabled={true}\r\n            />            \r\n            <Button\r\n              color={color}\r\n              icon='backward'\r\n              className='player-backward'\r\n              disabled={true}\r\n            />\r\n            <Button\r\n              color={color}\r\n              icon='forward'\r\n              className='player-forward'\r\n              disabled={true}\r\n            />\r\n          </Button.Group>\r\n            <Progress \r\n              color={color}\r\n              className='player-progress'\r\n              percent={percent}\r\n              label={`${curMinutes}:${curSeconds < 10 ? 0:''}${curSeconds} / ${minutes}:${seconds < 10 ? 0:''}${seconds}`} \r\n            />\r\n          <Button.Group>\r\n            <Button\r\n              color={color}\r\n              as='a'\r\n              href={url}\r\n              icon='download'\r\n              className='player-download'\r\n              disabled={true}\r\n              download\r\n            />\r\n            <Button\r\n              color={color}\r\n              icon='volume down'\r\n              className='player-down'\r\n              onClick={handleVolumeDown}\r\n            />\r\n            <Button\r\n              color={color}\r\n              icon='volume up'\r\n              className='player-up'\r\n              onClick={handleVolumeUp}\r\n            />\r\n          </Button.Group>\r\n          <div className='volume-indicator'>Volume: {volume*10}/10</div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default Player;","import React from 'react';\r\nimport Player from './Player';\r\nimport { \r\n  Form,\r\n  Input,\r\n  Header,\r\n  List,\r\n  Icon\r\n} from 'semantic-ui-react';\r\n\r\nclass Recordings extends React.Component {\r\n  \r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      search: ''\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let prompts = this.props.prompts;\r\n    let recordings = this.props.recordings;\r\n    let search = this.props.search;\r\n    \r\n    return (\r\n      <div id='recordings'>\r\n        <Header color='violet' as='h4'>Recording Manager:</Header>\r\n        \r\n        <Form>\r\n          <Form.Group widths={16}>\r\n            <Form.Field width={16}>\r\n              <label>Search Recordings:</label>\r\n              <Input\r\n                fluid\r\n                placeholder='Search...'\r\n                name='search'\r\n                action={{ color: 'violet', labelPosition: 'right', icon: 'search', content: 'Search', onClick: this.props.sendSearch }}\r\n                onChange={this.props.onUpdateSearch}\r\n                value={search}\r\n              />\r\n            </Form.Field>\r\n          </Form.Group>\r\n        </Form>\r\n\r\n        <Header as='h5'>\r\n          Recordings In Session:\r\n        </Header>\r\n        <List className='recording-list-manager' divided verticalAlign='middle'>\r\n          { prompts.length > 0 ?\r\n            prompts.map( (item, index) => {\r\n              let promptID = item.promptID;\r\n              let recs = recordings.filter(function(rec) {\r\n                return rec.promptID === promptID;\r\n              });\r\n              return item.promptlistExistsForRoom ?\r\n              (\r\n                <List.Item key={index}>\r\n                  <Icon name='chat' />\r\n                  <List.Content>\r\n                    {item.prompt} \r\n                  </List.Content>\r\n                  {recs.length > 0 ? \r\n                    recs.map((r, index) => {\r\n                      return (<Player color='violet' key={r.recordingID} url={`/audio/${r.filepath}`} title={r.recorderID} />)\r\n                    })\r\n                    : <Player color='violet' disabled />\r\n                  }\r\n                  \r\n                </List.Item>\r\n              ) : ''\r\n            })\r\n            :\r\n            <Header \r\n              as='h2'\r\n              textAlign='center'\r\n              icon\r\n              disabled\r\n            >\r\n              <Icon name=\"list alternate\" circular />\r\n              <Header.Content>No prompts in room yet...</Header.Content>\r\n            </Header>\r\n          }\r\n        </List>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default Recordings;\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Card, Header, Tab, Icon, Button } from 'semantic-ui-react';\r\nimport Prompts from './Prompts';\r\nimport Settings from './Settings';\r\nimport Importer from './Importer';\r\nimport Recordings from './Recordings';\r\n\r\nimport { \r\n  cbDataRoom,\r\n  cbDataPrompt,\r\n  cbDataPromptList,\r\n  cbListPrompts,\r\n  cbListRoomRecordings,\r\n  getPromptList,\r\n  getRoomRecordingList\r\n} from '../sockets/read';\r\n\r\nimport {\r\n  cbReloadRoomRecording\r\n} from '../sockets/update';\r\n\r\nclass Manager extends React.Component {\r\n  \r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      settings: {\r\n        roomID: -1,\r\n        roomKey: '',\r\n        active: false,\r\n        shuffle: false,\r\n        created: ''\r\n      },\r\n      prompts: [],\r\n      searchString: '',\r\n      recordings: []\r\n    }\r\n    cbDataRoom(this.handleDataRoom);\r\n    cbDataPrompt(this.handleDataPrompt);\r\n    cbListPrompts(this.handleListPrompts);\r\n    cbDataPromptList(this.handleDataPromptList);\r\n    cbListRoomRecordings(this.handleListRoomRecordings);\r\n    cbReloadRoomRecording(this.handleReloadRecordings);\r\n  }\r\n\r\n  componentDidMount() { \r\n    this._ismounted = true;\r\n  }\r\n  \r\n  componentWillUnmount() {\r\n     this._ismounted = false;\r\n  }\r\n\r\n  handleDataRoom = (room) => {\r\n    if(this._ismounted)\r\n      this.setState({settings: room}, this.init)\r\n  };\r\n  handleListPrompts = (payload) => {\r\n    if(this._ismounted)\r\n      this.setState({prompts: payload});\r\n  };\r\n  handleListRoomRecordings = (payload) => {\r\n    if(this._ismounted)\r\n      this.setState({recordings: payload})\r\n  };\r\n  handleReloadRecordings = (payload) => this.loadRecordings();\r\n  handleDataPrompt = (prompt) => {\r\n    let prompts = this.state.prompts;\r\n    prompts.push(prompt);\r\n    if(this._ismounted)\r\n      this.setState({prompts: prompts});\r\n  }\r\n  \r\n\r\n  init = () => {\r\n    this.loadPrompts();\r\n    this.loadRecordings();\r\n  }\r\n\r\n  handleDataPromptList = (promptlist) => this.sendSearch;\r\n\r\n  loadPrompts = () => {\r\n    let payload = {\r\n      roomID: this.state.settings.roomID\r\n    }\r\n    getPromptList(payload);\r\n  }\r\n\r\n  loadRecordings = () => {\r\n    let payload = {\r\n      roomID: this.state.settings.roomID,\r\n      room: this.state.settings.roomKey\r\n    }\r\n    getRoomRecordingList(payload);\r\n  }\r\n\r\n  sendSearch = () => {\r\n    let payload = {\r\n      roomID: this.state.settings.roomID\r\n    }\r\n    if(this.state.searchString !== '') \r\n      payload.search = this.state.searchString;\r\n\r\n    getPromptList(payload);\r\n  }\r\n\r\n  onUpdateSearch = (e, {value}) => this.setState({searchString: value}, this.sendSearch);\r\n\r\n  onQuit = (e) => this.props.history.push('/admin');\r\n\r\n  render() {\r\n    let settings = this.state.settings;\r\n    let room = this.state.settings.roomKey;\r\n    let languages = this.props.languages;\r\n    let prompts = this.state.prompts;\r\n    let recordings = this.state.recordings;\r\n    \r\n    let panes = [\r\n      { \r\n        menuItem: { key: 'settings', icon: 'settings', content: 'Settings'}, \r\n        render: () => \r\n          <Tab.Pane attached={false}>\r\n            <Settings\r\n              room={room}\r\n              settings={settings}\r\n            />\r\n          </Tab.Pane>\r\n      },\r\n      { \r\n        menuItem: { key: 'prompts', icon: 'write', content: 'Prompts'}, \r\n        render: () => \r\n          <Tab.Pane attached={false}>\r\n            <Prompts \r\n              room={room}\r\n              settings={settings}\r\n              prompts={prompts}\r\n              search={this.state.searchString}\r\n              sendSearch={this.sendSearch}\r\n              onUpdateSearch={this.onUpdateSearch}\r\n            />\r\n          </Tab.Pane>\r\n      },\r\n      { \r\n        menuItem: { key: 'recordings', icon: 'microphone', content: 'Recordings'}, \r\n        render: () => \r\n          <Tab.Pane attached={false}>\r\n            <Recordings \r\n              room={room}\r\n              settings={settings}\r\n              prompts={prompts}\r\n              recordings={recordings}\r\n              search={this.state.searchString}\r\n              sendSearch={this.sendSearch}\r\n              onUpdateSearch={this.onUpdateSearch}\r\n            />\r\n          </Tab.Pane>\r\n      },\r\n      { \r\n        menuItem: { key: 'import', icon: 'upload', content: 'Import'}, \r\n        render: () => \r\n          <Tab.Pane attached={false}>\r\n            <Importer \r\n              languages={languages}\r\n              room={settings}\r\n            />\r\n          </Tab.Pane>\r\n      },\r\n      { \r\n        menuItem: { key: 'export', icon: 'download', content: 'Export'}, \r\n        render: () => <Tab.Pane attached={false}><Header as='h1' color='violet'>Coming soon...</Header></Tab.Pane>\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <Card fluid color='violet'>\r\n        <Card.Content>\r\n          <Card.Header>\r\n            <Icon name='cog' />\r\n            Managing Room: <Header as='span' color='violet'>\"{room}\"</Header>\r\n            <Button \r\n              floated='right'\r\n              size='mini'\r\n              icon='close'\r\n              color='red'\r\n              onClick={this.onQuit}\r\n            />\r\n\r\n          </Card.Header>\r\n          <Card.Description>\r\n            <Tab menu={{ color: 'violet', borderless: true, pointing: true }} panes={panes} />\r\n          </Card.Description>\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(Manager);\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Modal, Button, Form } from 'semantic-ui-react';\r\nimport { duplicateRoom } from '../sockets/create';\r\n\r\nclass DuplicateRoomModal extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      open: false,\r\n      roomKey: ''\r\n    }\r\n  }\r\n\r\n  onCreate = () => {\r\n    //console.log('TODO: Duplicate room');\r\n    this.setState({open: false, roomKey: ''});\r\n    duplicateRoom({room: this.props.room, copy: this.state.roomKey})\r\n  }\r\n\r\n  onTrigger = () => {\r\n    this.setState({open: true});\r\n  }\r\n\r\n  onCancel = () => {\r\n    this.setState({open: false, roomKey: ''});\r\n  }\r\n\r\n  onRoomKeyChange = (e) => {\r\n    this.setState({roomKey: e.target.value});\r\n  }\r\n\r\n  render() {\r\n    let roomKey = this.state.roomKey;\r\n    return (\r\n      <Modal\r\n        open={this.state.open}\r\n        size='tiny'\r\n        dimmer='blurring'\r\n        trigger={\r\n          <Button\r\n            onClick={this.onTrigger}\r\n            color='violet'\r\n            content='Duplicate'\r\n            icon='copy'\r\n            labelPosition='right'\r\n          />\r\n          }\r\n      >\r\n        <Modal.Header>Please Provide An Existing Room...</Modal.Header>\r\n        <Modal.Content>\r\n          <Modal.Description>\r\n            <p>Using the duplicate feature, you may provide the name of an existing room to have all of the prompts from that room copied into a new room. Provide an existing room key below to get started.</p>\r\n            <Form id=\"room-name-copy\">\r\n              <Form.Field width={16}>\r\n                <label>Existing Room Key:</label>\r\n                <Form.Input \r\n                  placeholder='Room Name ...'\r\n                  name='room'\r\n                  type='text'\r\n                  value={ roomKey }\r\n                  onChange={this.onRoomKeyChange}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Description>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button\r\n            color='yellow'\r\n            content='Cancel'\r\n            icon='close'\r\n            labelPosition='right'\r\n            onClick={this.onCancel}\r\n          />\r\n          <Button\r\n            color='green'\r\n            content='Duplicate'\r\n            icon='checkmark'\r\n            labelPosition='right'\r\n            onClick={this.onCreate}\r\n          />\r\n        </Modal.Actions>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(DuplicateRoomModal);","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Modal, Button } from 'semantic-ui-react';\r\nimport { createRoom } from '../sockets/create';\r\nimport DuplicateRoomModal from './DuplicateRoomModal';\r\n\r\nclass NewRoomModal extends React.Component {\r\n\r\n  onCreate = () => {\r\n    createRoom({room: this.props.room});\r\n  }\r\n\r\n  onCancel = () => {\r\n    this.props.history.push('/admin')\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        open={this.props.open}\r\n        size='tiny'\r\n        dimmer='blurring'\r\n      >\r\n        <Modal.Header>The Room '{this.props.room}' Does Not Exist Yet...</Modal.Header>\r\n        <Modal.Content>\r\n          <Modal.Description>Do you wish to create the room '{this.props.room}'?</Modal.Description>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button\r\n            color='yellow'\r\n            content='Cancel'\r\n            icon='close'\r\n            labelPosition='right'\r\n            onClick={this.onCancel}\r\n          />\r\n          <DuplicateRoomModal room={this.props.room} />\r\n          <Button\r\n            color='green'\r\n            content='Create'\r\n            icon='checkmark'\r\n            labelPosition='right'\r\n            onClick={this.onCreate}\r\n          />\r\n        </Modal.Actions>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(NewRoomModal);","import React from 'react';\r\nimport { Grid, Header} from 'semantic-ui-react';\r\nimport Log from '../components/Log';\r\nimport Manager from '../components/Manager';\r\nimport NewRoomModal from '../components/NewRoomModal';\r\nimport socket from '../sockets/socket';\r\nimport { cbDataRoom, cbNewRoom, cbListLanguages } from '../sockets/read';\r\nimport { onReconnect } from '../sockets/socket';\r\nimport './Modules.css';\r\n\r\nclass AdminRoom extends React.Component {\r\n  \r\n  constructor() {\r\n    super();\r\n    this.state = { isNew: false, active: 0, roomID: -1, languages: [] };\r\n    cbDataRoom(this.handleDataRoom);\r\n    cbNewRoom(this.handleNewRoom);\r\n    cbListLanguages(this.handleListLanguages);\r\n    onReconnect(this.join);\r\n  }\r\n\r\n  handleNewRoom = (payload) => {\r\n    if(this._ismounted)\r\n      this.setState({isNew: payload});\r\n  }\r\n\r\n  handleDataRoom = (payload) => {\r\n    if(this._ismounted)\r\n      this.setState({\r\n        isNew: false,\r\n        active: payload.active,\r\n        roomID: payload.roomID\r\n      });\r\n  }\r\n\r\n  handleListLanguages = (payload) => {\r\n    if(this._ismounted)\r\n      this.setState({languages: payload});\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this._ismounted = true;\r\n    this.join();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._ismounted = false;\r\n  }\r\n\r\n  join = () => {\r\n    let match = this.props.match;\r\n    let room = match.params.room;\r\n    let payload = { room: room };\r\n    socket.emit('joinAdmin', payload);\r\n  }\r\n\r\n  render() {\r\n    let room = this.props.match.params.room;\r\n    let isNew = this.state.isNew;\r\n    let languages = this.state.languages;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Header as='h1' color='violet'>Prompt Recorder V2.0 Admin Panel</Header>\r\n        <Grid columns='equal' padded>\r\n          <Grid.Column>\r\n            <NewRoomModal room={room} open={isNew} />\r\n            <Manager room={room} languages={languages} />\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <Log />\r\n          </Grid.Column>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminRoom;\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Modal, Button, Header } from 'semantic-ui-react';\r\n\r\nclass newRecorderModal extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      open: false,\r\n      roomKey: ''\r\n    }\r\n  }\r\n\r\n  onTrigger = () => {\r\n    this.props.updateNewRec();\r\n  }\r\n\r\n  onCancel = () => {\r\n    this.props.updateNewRec();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        open={this.props.newRecorder}\r\n        size='tiny'\r\n        dimmer='blurring'\r\n        trigger={\r\n          <Button\r\n            onClick={this.onTrigger}\r\n            color='blue'\r\n            content='Whats My ID?'\r\n            icon='help circle'\r\n            labelPosition='right'\r\n          />\r\n          }\r\n      >\r\n        <Modal.Header>Your Recorder ID:</Modal.Header>\r\n        <Modal.Content>\r\n          <Modal.Description>\r\n            <p>Please write down the following ID and keep it. This is the only unique identifier for your data. Should you ever want a copy of your data, or have your data removed, this ID must be provided.</p>\r\n            <Header as='h3' color='violet'>Your ID: {this.props.match.params.userID}</Header>\r\n          </Modal.Description>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button\r\n            color='green'\r\n            content='Okay'\r\n            icon='check'\r\n            labelPosition='right'\r\n            onClick={this.onCancel}\r\n          />\r\n        </Modal.Actions>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(newRecorderModal);","import React from 'react';\r\nimport { Button, Header, Icon } from 'semantic-ui-react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Player from './Player';\r\nimport NewRecorderModal from './NewRecorderModal';\r\nimport { \r\n  startRecording,\r\n  stopRecording,\r\n  SAMPLERATE,\r\n  CHANNELS\r\n} from '../audio/audio';\r\n\r\nimport { \r\n  cbNewRecording,\r\n  cbListRecordings,\r\n  getRecordingList\r\n} from '../sockets/read';\r\nimport { cbUpdateRecording } from '../sockets/update';\r\n\r\nclass Controls extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      activeIndex: 0,\r\n      recording: false,\r\n      activeRecording: {\r\n        recordingID: -1,\r\n        filepath: '',\r\n        sampleRate: 16000,\r\n        channels: 1,\r\n        recorderID: -1,\r\n        promptID: -1,\r\n        roomID: -1,\r\n        recPrompt: '',\r\n        metrics: {}\r\n      },\r\n      recordings: []\r\n    }\r\n\r\n    cbNewRecording(this.onNewRecording);\r\n    cbUpdateRecording(this.onUpdateRecording);\r\n    cbListRecordings(this.onListRecordings);\r\n\r\n  }\r\n\r\n  componentDidMount() { \r\n    this._ismounted = true;\r\n  }\r\n  \r\n  componentWillUnmount() {\r\n     this._ismounted = false;\r\n     if(this.state.recording) {\r\n       this.stopRecording();\r\n     }\r\n  }\r\n\r\n  onNewRecording = (payload) => {\r\n    let match = this.props.match;\r\n    let roomID = this.props.room.roomID;\r\n    let userID = match.params.userID;\r\n    let promptID = this.props.prompts[this.state.activeIndex].promptID;\r\n    let listPayload = { \r\n      roomID: roomID,\r\n      recorderID: userID,\r\n      promptID: promptID\r\n    };\r\n    if(this._ismounted)\r\n      this.setState({activeRecording: payload});\r\n    getRecordingList(listPayload);\r\n  }\r\n\r\n  onListRecordings = (payload) => {\r\n    if(this._ismounted)\r\n      this.setState({recordings: payload});\r\n  }\r\n\r\n  onUpdateRecording = (payload) => {\r\n    let match = this.props.match;\r\n    let roomID = this.props.room.roomID;\r\n    let userID = match.params.userID;\r\n    let promptID = this.props.prompts[this.state.activeIndex].promptID;\r\n    let listPayload = { \r\n      roomID: roomID,\r\n      recorderID: userID,\r\n      promptID: promptID\r\n    };\r\n    getRecordingList(listPayload);\r\n  }\r\n\r\n  next = () => {\r\n    let match = this.props.match;\r\n    let roomID = this.props.room.roomID;\r\n    let userID = match.params.userID;\r\n    let promptID = this.props.prompts[this.state.activeIndex+1].promptID;\r\n    let listPayload = { \r\n      roomID: roomID,\r\n      recorderID: userID,\r\n      promptID: promptID\r\n    };\r\n    this.setState({activeIndex: this.state.activeIndex+1});\r\n    getRecordingList(listPayload);\r\n  }\r\n\r\n  prev = () => {\r\n    let match = this.props.match;\r\n    let roomID = this.props.room.roomID;\r\n    let userID = match.params.userID;\r\n    let promptID = this.props.prompts[this.state.activeIndex-1].promptID;\r\n    let listPayload = { \r\n      roomID: roomID,\r\n      recorderID: userID,\r\n      promptID: promptID\r\n    };\r\n    this.setState({activeIndex: this.state.activeIndex-1});\r\n    getRecordingList(listPayload);\r\n  }\r\n\r\n  startRecording = () => {\r\n    let match = this.props.match;\r\n    let roomID = this.props.room.roomID;\r\n    let userID = match.params.userID;\r\n    let promptID = this.props.prompts[this.state.activeIndex].promptID;\r\n    let payload = { \r\n      roomID: roomID,\r\n      recorderID: userID,\r\n      promptID: promptID,\r\n      sampleRate: SAMPLERATE,\r\n      channels: CHANNELS\r\n    };\r\n    this.setState({recording: true});\r\n    startRecording(payload);\r\n  }\r\n\r\n  stopRecording = () => {\r\n    let match = this.props.match;\r\n    let roomID = this.props.room.roomID;\r\n    let userID = match.params.userID;\r\n    let promptID = this.props.prompts[this.state.activeIndex].promptID;\r\n    let recordingID = this.state.activeRecording.recordingID;\r\n    let payload = { \r\n      roomID: roomID,\r\n      recorderID: userID,\r\n      promptID: promptID,\r\n      recordingID: recordingID,\r\n      roomKey: this.props.room.roomKey\r\n    };\r\n    this.setState({recording: false});\r\n    stopRecording(payload);\r\n  }\r\n\r\n  getNavButtons = () => {\r\n    let i = this.state.activeIndex;\r\n    let l = this.props.prompts.length-1;\r\n    let newRecorder = this.props.newRecorder;\r\n    let updateNewRec = this.props.updateNewRec;\r\n    return (\r\n      <Button.Group widths='3'>\r\n        <Button\r\n          basic\r\n          color='violet'\r\n          content='Back'\r\n          icon='arrow circle left'\r\n          labelPosition='left'\r\n          disabled={i > 0 ? false : true}\r\n          onClick={this.prev}\r\n        />\r\n        <NewRecorderModal newRecorder={newRecorder} updateNewRec={updateNewRec} />\r\n        <Button\r\n          color='violet'\r\n          content='Next'\r\n          icon='arrow circle right'\r\n          labelPosition='right'\r\n          disabled={ i < l ? false: true}\r\n          onClick={this.next}\r\n        />\r\n      </Button.Group>\r\n    );\r\n  }\r\n\r\n  getRecordButton = () => {\r\n    let recording = this.state.recording;\r\n    return (\r\n        recording ?\r\n        (<Button\r\n          color='red'\r\n          content='Stop Recording'\r\n          icon='circle'\r\n          labelPosition='right'\r\n          id='rec-button'\r\n          onClick={this.stopRecording}\r\n        />)\r\n        :(<Button\r\n          color='red'\r\n          content='Start Recording'\r\n          icon='circle outline'\r\n          labelPosition='right'\r\n          id='rec-button'\r\n          onClick={this.startRecording}\r\n          disabled={window.hasMicrophone ? false : true}\r\n        />)\r\n    );\r\n  }\r\n\r\n  getBars = () => {\r\n    let recording = this.state.recording;\r\n    return (\r\n      <div id='bars' className={recording ? 'active':''}>\r\n        <div className='bar'></div>\r\n        <div className='bar'></div>\r\n        <div className='bar'></div>\r\n        <div className='bar'></div>\r\n        <div className='bar'></div>\r\n        <div className='bar'></div>\r\n        <div className='bar'></div>\r\n        <div className='bar'></div>\r\n        <div className='bar'></div>\r\n        <div className='bar'></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getLatestFile = () => {\r\n    let latest = '';\r\n    for(let i = 0; i < this.state.recordings.length; i++) {\r\n      let current = this.state.recordings[i];\r\n      if(current.filepath && current.filepath !== '') {\r\n        latest = current.filepath;\r\n        break;\r\n      }\r\n    }\r\n    return latest;\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if(this._ismounted) {\r\n      let i = this.state.activeIndex;\r\n      let max = nextProps.prompts.length-1;\r\n      if(i > max && max !== -1) {\r\n        this.setState({activeIndex: max});\r\n      }\r\n      if(max === -1) {\r\n        this.setState({activeIndex: 0});\r\n      }\r\n      if(nextProps.prompts.length > 0) {\r\n        let match = nextProps.match;\r\n        let roomID = nextProps.room.roomID;\r\n        let userID = match.params.userID;\r\n        let promptID = nextProps.prompts[this.state.activeIndex].promptID;\r\n        let listPayload = { \r\n          roomID: roomID,\r\n          recorderID: userID,\r\n          promptID: promptID\r\n        };\r\n        getRecordingList(listPayload);\r\n      }\r\n    }\r\n  }\r\n\r\n  render(){\r\n    let prompts = this.props.prompts;\r\n    let activeIndex = this.state.activeIndex;\r\n    let navButtons = this.getNavButtons();\r\n    let recButton = this.getRecordButton();\r\n    let bars = this.getBars();\r\n    let latestFile = this.getLatestFile();\r\n    let url = latestFile !== '' ? `/audio/${latestFile}` : '';\r\n\r\n    if(prompts.length > 0) {\r\n      return (\r\n        <div className='controller'>\r\n          <Header as='h2' color='violet'>Please Read:</Header>\r\n          <Header id='prompt' as='h1'>{prompts[activeIndex].prompt}</Header>\r\n          {bars}\r\n          {window.hasMicrophone ? recButton : <Header as='h3' color='red'>No microphone is available to record.</Header>}\r\n          {url !== '' ? <Player color='violet' url={url} /> : <Player color='violet' disabled />}\r\n          {navButtons}\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div className='controller'>\r\n          <Header \r\n            as='h2'\r\n            textAlign='center'\r\n            icon\r\n            disabled\r\n          >\r\n            <Icon name=\"list alternate\" circular />\r\n            <Header.Content>No prompts in session yet, please wait...</Header.Content>\r\n          </Header>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(Controls);\r\n","import React from 'react';\r\nimport { Card, Header, Loader, Icon } from 'semantic-ui-react';\r\nimport Stepper from './Stepper';\r\nimport Controls from './Controls';\r\nimport socket from '../sockets/socket';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass Prompter extends React.Component {\r\n\r\n  componentDidMount() {\r\n    this.join();\r\n  }\r\n\r\n  join = () => {\r\n    let match = this.props.match;\r\n    let room = match.params.room;\r\n    let userID = match.params.userID;\r\n    let payload = { room: room, recorder: userID };\r\n    socket.emit('join', payload); \r\n  }\r\n\r\n  render(){\r\n\r\n    let admin = this.props.admin;\r\n    let room = this.props.room;\r\n    let userID = this.props.userID;\r\n    let prompts = this.props.prompts;\r\n    let newRecorder = this.props.newRecorder;\r\n    let updateNewRec = this.props.updateNewRec;\r\n\r\n    let stepper = <Stepper steps={[\r\n      {state: 'completed', title: 'Join a Room', description: 'Enter a room to join', href: '/'},\r\n      {state: 'completed', title: 'Provide an ID', description: 'Identify the recorder', href: '/'+room.roomKey },\r\n      {state: 'active', title: 'Record', description: 'Record prompt readings', href: '#'}\r\n    ]} />;\r\n\r\n    return (\r\n      <Card fluid color='violet'>\r\n        <Card.Content>\r\n        {admin ? '':stepper}\r\n          <Card.Header>\r\n            <Icon name='microphone' />\r\n            Recording Prompts In Room \r\n            <Header as='span' color='violet'>\"{room.roomKey}\"</Header>\r\n            as Recorder \r\n            <Header as='span' color='violet'>\"{userID}\"</Header>\r\n            \r\n          </Card.Header>\r\n          <Card.Description>\r\n            {\r\n              this.props.room.active === 0 ? \r\n              <div className=\"loader\">\r\n                <Loader active size='massive' />\r\n                Please wait for room to be activated...\r\n              </div> \r\n              : <Controls prompts={prompts} room={room} newRecorder={newRecorder} updateNewRec={updateNewRec} />\r\n            }\r\n          </Card.Description>\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Prompter);\r\n","import React from 'react';\r\nimport path from 'path';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Card, Form, Button, Divider, Header, Dropdown } from 'semantic-ui-react';\r\nimport Stepper from './Stepper';\r\nimport { createRecorder } from '../sockets/create';\r\n\r\nclass IDer extends React.Component {\r\n  \r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      recorderID: '',\r\n      recorderGender: '',\r\n      recorderAge: ''\r\n    };\r\n  }\r\n\r\n  onIDChange = (e, { value }) => this.setState({ recorderID: value });\r\n  onAgeChange = (e, { value }) => this.setState({ recorderAge: value});\r\n  onGenderChange = (e, { value }) => this.setState({ recorderGender: value});\r\n\r\n  onJoin = () => {\r\n    let id = this.state.recorderID;\r\n    if(id && id !== '' && id.match(/^[\\d+]*$/)) {\r\n      this.props.history.push(path.join(window.location.pathname, id));\r\n    }\r\n  }\r\n\r\n  onCreateRecorder = () => {\r\n    let payload = {\r\n      recorderAge: this.state.recorderAge, \r\n      recorderGender: this.state.recorderGender, \r\n      room: this.props.room.roomKey\r\n    };\r\n    createRecorder(payload);\r\n  }\r\n\r\n  render() {\r\n    const { recorderGender, recorderID, recorderAge } = this.state;\r\n    let stepper = <Stepper steps={[\r\n      {state: 'completed', title: 'Join a Room', description: 'Enter a room to join', href: '/'},\r\n      {state: 'active', title: 'Provide an ID', description: 'Identify the recorder', href: '#' },\r\n      {state: 'disabled', title: 'Record', description: 'Record prompt readings', href: '#'}\r\n    ]} />;\r\n\r\n    return (\r\n      <Card fluid color='violet'>\r\n        <Card.Content>\r\n          {stepper}\r\n          <Card.Description>\r\n            <Header as='h3' color='violet'>Enter a Recorder ID:</Header>\r\n            <Form onSubmit={this.onJoin}>\r\n                <Form.Field width={16}>\r\n                  <label>Existing Recorder ID:</label>\r\n                  <Form.Input \r\n                    placeholder='00005'\r\n                    name='room'\r\n                    type='number'\r\n                    value={ recorderID }\r\n                    onChange={this.onIDChange}\r\n                    action={{ \r\n                      color: 'violet',\r\n                      labelPosition: 'right', \r\n                      icon: 'arrow circle right', \r\n                      content: 'Verify & Begin Recording',\r\n                      type: 'sumbit'\r\n                    }}\r\n                  />\r\n                </Form.Field>\r\n            </Form>\r\n            <Divider horizontal>Or</Divider>\r\n            <Header as='h3' color='violet'>Create a new ID:</Header>\r\n            <Form onSubmit={this.onCreateRecorder}>\r\n              <Form.Group>\r\n                <Form.Field width={8}>\r\n                  <label>Recorder Age (years):</label>\r\n                  <Form.Input \r\n                    placeholder='12'\r\n                    name='room'\r\n                    type='number'\r\n                    value={recorderAge}\r\n                    onChange={this.onAgeChange}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field width={8}>\r\n                  <label>Recorder Gender:</label>\r\n                  <Dropdown\r\n                    placeholder='Select Gender'\r\n                    fluid\r\n                    selection\r\n                    name='gender'\r\n                    value={recorderGender}\r\n                    onChange={this.onGenderChange}\r\n                    options={[\r\n                      {key: 'Male', text: 'Male', value: 'Male'},\r\n                      {key: 'Female', text: 'Female', value: 'Female'},\r\n                      {key: 'Unspecified', text: 'Unspecified', value: 'Unspecified'}\r\n                    ]}\r\n                  />\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Button \r\n                color='green'\r\n                type='submit'\r\n                labelPosition='right'\r\n                icon='plus circle'\r\n                content='Create & Begin Recording'\r\n                floated='right'\r\n              />\r\n            </Form>\r\n          </Card.Description>\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(IDer);\r\n","import React from 'react';\r\nimport Joiner from './Joiner';\r\nimport Prompter from './Prompter';\r\nimport IDer from './IDer';\r\n\r\n\r\n\r\nfunction Recorder({room, userID, prompts, newRecorder, handleUpdateNewRec}) {\r\n  let roomKey = '';\r\n  if(room) roomKey = room.roomKey;\r\n\r\n  return (\r\n    <div className=\"recorder\">\r\n        { userID ? \r\n          <Prompter\r\n            room={room}\r\n            userID={userID}\r\n            newRecorder={newRecorder}\r\n            updateNewRec={handleUpdateNewRec}\r\n            prompts={prompts}\r\n          /> \r\n          : (roomKey !== '' ? <IDer room={room} /> : <Joiner />)}\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default Recorder;\r\n","import React from 'react';\r\nimport { Grid, Header } from 'semantic-ui-react';\r\nimport Log from '../components/Log';\r\nimport Recorder from '../components/Recorder';\r\nimport './Modules.css';\r\n\r\n\r\nfunction UserHome() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header as='h1' color='violet'>Prompt Recorder V2.0</Header>\r\n      <Grid columns='equal' padded>\r\n        <Grid.Column>\r\n          <Recorder />\r\n        </Grid.Column>\r\n        <Grid.Column>\r\n          <Log />\r\n        </Grid.Column>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserHome;\r\n","import React from 'react';\r\nimport { Card, Loader } from 'semantic-ui-react';\r\n\r\n\r\n\r\nfunction Waiter({room}) {\r\n\r\n  return (\r\n    <div className=\"waiter\">\r\n      <Card fluid color='violet'>\r\n        <Card.Content>\r\n          <Card.Header>Please Wait for Room '{room}' to be initialized...</Card.Header>\r\n          <Card.Description>\r\n            <Loader active inline='centered' size='massive' />\r\n          </Card.Description>\r\n        </Card.Content>\r\n      </Card>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default Waiter;","import React from 'react';\r\nimport { Grid, Header } from 'semantic-ui-react';\r\nimport Log from '../components/Log';\r\nimport Recorder from '../components/Recorder';\r\nimport Waiter from '../components/Waiter';\r\nimport socket from '../sockets/socket';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { \r\n  cbDataRoom,\r\n  cbNoRecorder,\r\n  cbNewRecorder,\r\n  cbNewRoom,\r\n  cbListRoomPrompts,\r\n  getRoomPrompts\r\n} from '../sockets/read';\r\nimport { onReconnect } from '../sockets/socket';\r\n\r\nimport './Modules.css';\r\n\r\nclass UserRoom extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = { \r\n      isNew: false,\r\n      newRecorder: false,\r\n      room: {\r\n        roomID: -1,\r\n        roomKey: '',\r\n        active: 0,\r\n        shuffle: 0,\r\n        created: ''\r\n      },\r\n      prompts: []\r\n    };\r\n    cbDataRoom(this.handleDataRoom);\r\n    cbNoRecorder(this.handleNoRecorder);\r\n    cbNewRecorder(this.handleNewRecorder);\r\n    cbNewRoom(this.handleNewRoom);\r\n    cbListRoomPrompts(this.handleListRoomPrompts);\r\n    onReconnect(this.join);\r\n  }\r\n\r\n  handleNewRoom = (payload) => {\r\n    if(this._ismounted)\r\n      this.setState({isNew: payload});\r\n  }\r\n  handleDataRoom = (payload) => {\r\n    if(this._ismounted)\r\n      this.setState({room: payload}, this.GetPrompts);\r\n  };\r\n  \r\n  handleListRoomPrompts = (payload) => {\r\n    let prompts = payload;\r\n    if(this.state.room.shuffle === 1) {\r\n      prompts = this.shuffle(prompts);\r\n    }\r\n    if(this._ismounted)\r\n      this.setState({prompts: prompts});\r\n  };\r\n  handleNoRecorder = (payload) => {\r\n    if(payload.recorder)\r\n       this.props.history.push('/'+payload.room);\r\n  }\r\n  handleNewRecorder = (payload) => {\r\n    if(payload.recorderID) {\r\n      if(this._ismounted)\r\n        this.setState({newRecorder: true})\r\n      this.props.history.push(`/${payload.room}/${payload.recorderID}`);\r\n    }\r\n  }\r\n\r\n  handleUpdateNewRec = () => {\r\n    if(this._ismounted)\r\n        this.setState({newRecorder: !this.state.newRecorder});\r\n  }\r\n\r\n  shuffle = (array) => {\r\n\r\n    var currentIndex = array.length;\r\n    var temporaryValue, randomIndex;\r\n\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n        // Pick a remaining element...\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex -= 1;\r\n\r\n        // And swap it with the current element.\r\n        temporaryValue = array[currentIndex];\r\n        array[currentIndex] = array[randomIndex];\r\n        array[randomIndex] = temporaryValue;\r\n    }\r\n\r\n    return array;\r\n\r\n  };\r\n\r\n  join = () => {\r\n    let match = this.props.match;\r\n    let room = match.params.room;\r\n    let userID = match.params.userID;\r\n    let payload = { room: room, recorder: userID };\r\n    socket.emit('join', payload);\r\n    \r\n  }\r\n\r\n  GetPrompts = () => getRoomPrompts({roomID: this.state.room.roomID});\r\n\r\n  componentDidMount() {\r\n    this._ismounted = true;\r\n    this.join();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._ismounted = false;\r\n  }\r\n\r\n  render() {\r\n    let match = this.props.match;\r\n    let room = match.params.room;\r\n    let userID = match.params.userID;\r\n    let isNew = this.state.isNew;\r\n    let prompts = this.state.prompts;\r\n    let newRecorder = this.state.newRecorder;\r\n    \r\n    return (\r\n      <div className=\"App\">\r\n        <Header as='h1' color='violet'>Prompt Recorder V2.0</Header>\r\n        <Grid columns='equal' padded>\r\n          <Grid.Column>\r\n            {isNew ? \r\n              <Waiter room={room} /> \r\n              : <Recorder\r\n                  room={this.state.room}\r\n                  userID={userID}\r\n                  newRecorder={newRecorder}\r\n                  prompts={prompts}\r\n                  handleUpdateNewRec={this.handleUpdateNewRec}\r\n                />\r\n            }\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <Log />\r\n          </Grid.Column>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(UserRoom);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\n\nimport AdminHome from './modules/AdminHome';\nimport AdminRoom from './modules/AdminRoom';\nimport UserHome from './modules/UserHome';\nimport UserRoom from './modules/UserRoom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render((\n  <BrowserRouter>\n    <div>\n      <Switch>\n        <Route path=\"/\" exact component={UserHome} />\n        <Route path=\"/admin\" exact component={AdminHome} />\n        <Route path=\"/admin/:room\" component={AdminRoom} />\n        <Route path=\"/:room/:userID(\\d+)?\" component={UserRoom} />\n      </Switch>\n    </div>\n  </BrowserRouter>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}